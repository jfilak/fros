#! /bin/python
# -*- coding: utf-8 -*-


import re
import sys
from pyfros.froslogging import info, set_verbosity
from pyfros.controls import Controls
#pylint: disable=E0611
from gi.repository import Gtk
#pylint: disable=W0401
from pyfros.plugins import *
from pyfros.i18n import _
from pyfros import i18n
import pyfros.plugins as plugins
import argparse

#sys.path.append(sys.path[0]+ "/plugins")
PLUGIN_DIR = "."
#ignore_pattern = "(__init__.py)|(\w*\.pyc)"
#ignore_regexp = re.compile(ignore_pattern)
plugin_pattern = r"\w*\.py$"
plugin_regexp = re.compile(plugin_pattern)


def load_plugins():
    loaded_plugins = []
    import inspect
    #pylint: disable=W0612
    for name, obj in inspect.getmembers(plugins):
        try:
            plugin_instance = obj.getScreencastPluginInstance()
            if plugin_instance.IsSuitable() > 0:  # append only suitable plugins
                loaded_plugins.append(plugin_instance)
                info("Added plugin:", plugin_instance)
        #pylint: disable=W0703
        except Exception, ex:
            info("'{0}' is not a plugin: '{1}'".format(obj, ex))

    # return plugins sorted by their IsSuitable weight, the best match first
    return sorted(loaded_plugins, key=lambda plugin: plugin.IsSuitable(), reverse=True)

if __name__ == "__main__":
    # init internationalization
    i18n.init("fros")

    commands = argparse.ArgumentParser('parent', description=_("Screencasting cmdline"))
    commands.add_argument("--verbose", "-v", action="count", default=0)
    commands.add_argument("--is-available", action="store_true", default=False)

    args = commands.parse_args()
    set_verbosity(args.verbose)
    available_plugins = load_plugins()

    if args.is_available:
        if available_plugins:
            sys.exit(0)
        sys.exit(1)

    info("Selected plugin: ", available_plugins[0])
    controls = Controls(available_plugins[0])
    controls.show_all()
    Gtk.main()
